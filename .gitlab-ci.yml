stages:
  - release
  - build
  - clean
  - deploy

release:
  image: node:12-buster-slim
  stage: release
  script:
    - apt-get update && apt-get install -y --no-install-recommends git-core ca-certificates
    - npm install -g semantic-release @semantic-release/gitlab @semantic-release/git @semantic-release/changelog
    - semantic-release
  only:
    - master
  tags:
    - ns01

build_frontend:
  stage: build
  image: docker
  script:
    - docker login ${CI_REGISTRY} -u gitlab-ci-token -p ${CI_BUILD_TOKEN}
    - docker build -t ${CI_REGISTRY_IMAGE}:frontend-latest -f ./frontend/.docker/Dockerfile ./frontend
    - docker push ${CI_REGISTRY_IMAGE}:frontend-latest
  only:
    - master
  tags:
    - ns01

build_backend:
  stage: build
  image: docker
  script:
    - docker login ${CI_REGISTRY} -u gitlab-ci-token -p ${CI_BUILD_TOKEN}
    - docker build -t ${CI_REGISTRY_IMAGE}:backend-latest ./backend
    - docker push ${CI_REGISTRY_IMAGE}:backend-latest
  only:
    - master
  tags:
    - ns01

clean:
  stage: clean
  image: docker
  script:
    - docker system prune -a -f
  only:
    - master
  tags:
    - ns01

deploy_dev:
  stage: deploy
  script:
    - cd /opt/ns-ansible-infrastructure
    - echo ${VAULT_PASSWORD_KEY} > password-file
    - ansible-playbook -i hosts -l ecoteka_dev --vault-password-file password-file deploy.yml
    - rm password-file
  only:
    - master
  tags:
    - ns01
  variables:
    ANSIBLE_INVENTORY_UNPARSED_FAILED: "true"
