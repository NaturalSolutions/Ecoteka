stages:
  - build_dev
  - deploy_dev
  - build_master
  - deploy_master

build_frontend_dev:
  stage: build_dev
  image: docker
  script:
    - docker login ${CI_REGISTRY} -u gitlab-ci-token -p ${CI_BUILD_TOKEN}
    - docker build -t ${CI_REGISTRY_IMAGE}:frontend-dev-latest -f ./frontend/.docker/Dockerfile ./frontend
    - docker push ${CI_REGISTRY_IMAGE}:frontend-dev-latest
    - docker system prune -a -f
  only:
    - dev
  tags:
    - ns01

build_backend_dev:
  stage: build_dev
  image: docker
  script:
    - docker login ${CI_REGISTRY} -u gitlab-ci-token -p ${CI_BUILD_TOKEN}
    - docker build -t ${CI_REGISTRY_IMAGE}:backend-dev-latest ./backend
    - docker push ${CI_REGISTRY_IMAGE}:backend-dev-latest
    - docker system prune -a -f
  only:
    - dev
  tags:
    - ns01

build_frontend_master:
  stage: build_master
  image: docker
  script:
    - docker login ${CI_REGISTRY} -u gitlab-ci-token -p ${CI_BUILD_TOKEN}
    - docker build -t ${CI_REGISTRY_IMAGE}:frontend-latest -f ./frontend/.docker/Dockerfile ./frontend
    - docker push ${CI_REGISTRY_IMAGE}:frontend-latest
    - docker system prune -a -f
  only:
    - master
  tags:
    - ns01

build_backend_master:
  stage: build_master
  image: docker
  script:
    - docker login ${CI_REGISTRY} -u gitlab-ci-token -p ${CI_BUILD_TOKEN}
    - docker build -t ${CI_REGISTRY_IMAGE}:backend-latest ./backend
    - docker push ${CI_REGISTRY_IMAGE}:backend-latest
    - docker system prune -a -f
  only:
    - master
  tags:
    - ns01

deploy_dev:
  stage: deploy_dev
  script:
    - cd /opt/ns-ansible-infrastructure && ansible-playbook -i hosts -l ecoteka_master deploy.yml
  only:
    - dev
  tags:
    - ns01

deploy_master:
  stage: deploy_master
  script:
    - cd /opt/ns-ansible-infrastructure && ansible-playbook -i hosts -l ecoteka_master deploy.yml
  only:
    - master
  tags:
    - ns01

build-ecoteka-web:
  stage: build_prod
  image: docker
  script:
    - docker login ${CI_REGISTRY} -u gitlab-ci-token -p ${CI_BUILD_TOKEN}
    - docker build --build-arg asset_prefix=${ETK_ASSET_PREFIX} -t ${CI_REGISTRY_IMAGE}:latest ./frontend
    - docker push ${CI_REGISTRY_IMAGE}:latest
  only:
    - master
  tags:
    - ns01

pages:
  image: ${CI_REGISTRY_IMAGE}:latest
  stage: pages_prod
  script:
    - cp -r /usr/share/nginx/html public
  artifacts:
    paths:
      - public
  only:
    - master
